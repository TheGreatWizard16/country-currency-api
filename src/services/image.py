# Generates the summary.png after refresh using Pillow

import os
from PIL import Image, ImageDraw
from sqlalchemy.orm import Session
from sqlalchemy import select, desc
from ..models import Country, MetaKV

CACHE_PATH = "cache/summary.png"

def generate_summary_image(db: Session):
    # Count total countries
    total = db.scalar(select(Country).with_only_columns(Country.id).count())
    if total is None:
        total = db.scalar(select(Country).with_only_columns(Country.id)) or 0

    # Top 5 by GDP
    top5 = db.execute(
        select(Country).order_by(desc(Country.estimated_gdp)).limit(5)
    ).scalars().all()

    last = db.get(MetaKV, "last_refresh_ts")
    ts = last.value if last else "N/A"

    os.makedirs("cache", exist_ok=True)
    img = Image.new("RGB", (1000, 620), "white")
    d = ImageDraw.Draw(img)

    # Header
    y = 30
    d.text((30, y), "Country Cache Summary"); y += 50
    d.text((30, y), f"Total countries: {total}"); y += 35
    d.text((30, y), "Top 5 by estimated GDP:"); y += 30

    rank = 1
    for c in top5:
        gdp = "N/A" if c.estimated_gdp is None else f"{float(c.estimated_gdp):,.2f}"
        line = f"{rank}. {c.name} â€” {gdp}"
        d.text((40, y), line); y += 26
        rank += 1

    d.text((30, 560), f"Last refresh: {ts}")
    d.text((30, 590), "Generated by /countries/refresh")

    img.save(CACHE_PATH)

def summary_image_path() -> str:
    return CACHE_PATH
